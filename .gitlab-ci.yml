# =============================================================================
# PIPELINE GITLAB CI/CD - INFRASTRUCTURE AS CODE (VERSION MODULAIRE)
# =============================================================================
# Description : Pipeline orchestrateur utilisant une architecture modulaire
# Version     : 3.1.0 - Refactorisation DRY complÃ¨te
# Migration   : Depuis pipeline monolithique v2.0.0
# Auteur      : Infrastructure Team
# =============================================================================

# ðŸ“‹ INCLUSION DES MODULES SPÃ‰CIALISÃ‰S
include:
  - local: '.gitlab/ci/templates/variables.yml'
  - local: '.gitlab/ci/templates/globals.yml'
  - local: '.gitlab/ci/templates/terraform.yml'
  - local: '.gitlab/ci/templates/ansible.yml'

  - local: '.gitlab/ci/jobs/apply/terraform.yml'
  - local: '.gitlab/ci/jobs/cleanup/terraform.yml'
  - local: '.gitlab/ci/jobs/deploy/ansible.yml'
  - local: '.gitlab/ci/jobs/plan/terraform.yml'
  - local: '.gitlab/ci/jobs/sync/github.yml'
  - local: '.gitlab/ci/jobs/validate/terraform.yml'

# ðŸ”„ STAGES DU PIPELINE
stages:
  - validate     # Validation syntaxique et versions
  - plan         # Planification des changements
  - apply        # Application infrastructure
  - deploy       # DÃ©ploiement applicatif
  - sync         # Synchronisation externes
  - cleanup      # Nettoyage ressources

# =============================================================================
# ðŸš¨ CONFIGURATION DE SÃ‰CURITÃ‰ GLOBALE
# =============================================================================

# Variables de sÃ©curitÃ© hÃ©ritÃ©es par tous les jobs
# (Les autres variables sont dans variables.yml)
variables:
  # SÃ©curitÃ© pipeline
  GIT_STRATEGY: clone
  GIT_CLEAN_FLAGS: -ffdx
  
  # MÃ©tadonnÃ©es pipeline
  PIPELINE_VERSION: "3.0.0"
  PIPELINE_TYPE: "modular"

