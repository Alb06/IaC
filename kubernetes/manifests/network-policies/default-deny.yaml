# Default deny-all policy pour automation
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: automation
  labels:
    app.kubernetes.io/name: network-policy
    app.kubernetes.io/component: security
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
# Allow egress pour DNS et communication inter-namespaces contrôlée
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns-egress
  namespace: automation
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  - to:
    - namespaceSelector:
        matchLabels:
          name: databases
    ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
  - to:
    - namespaceSelector:
        matchLabels:
          name: cache
    ports:
    - protocol: TCP
      port: 6379  # Redis
---
# Default deny-all policy pour databases
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: databases
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
# Allow ingress pour databases depuis automation et monitoring
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-database-access
  namespace: databases
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: database
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: automation
    ports:
    - protocol: TCP
      port: 5432
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 5432
---
# Allow DNS egress pour databases
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns-egress
  namespace: databases
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
---
# Default deny-all policy pour cache
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: cache
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
# Allow ingress pour cache depuis automation
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-cache-access
  namespace: cache
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: cache
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: automation
    ports:
    - protocol: TCP
      port: 6379  # Redis
    - protocol: TCP
      port: 11211  # Memcached
---
# Allow DNS egress pour cache
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns-egress
  namespace: cache
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
---
# Monitoring network policy (extension pour accès cross-namespace)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-monitoring-access
  namespace: monitoring
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: monitoring
  policyTypes:
  - Egress
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: automation
  - to:
    - namespaceSelector:
        matchLabels:
          name: databases
  - to:
    - namespaceSelector:
        matchLabels:
          name: cache
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53