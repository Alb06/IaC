# =============================================================================
# JOBS ANSIBLE GITLAB CI/CD
# =============================================================================
# Description : Jobs sp√©cifiques pour les d√©ploiements Ansible
# Version     : 1.0.0
# =============================================================================

# Job de test de connectivit√© Ansible
ansible_ping:
  extends: 
    - .ansible_base
    - .setup_ssh
  stage: validate
  script:
    - echo "üîç Test de connectivit√© Ansible..."
    - |
      for env in dev prod; do
        if [ -f "ansible/inventory/$env" ]; then
          echo "Test environnement: $env"
          ansible all -i "ansible/inventory/$env" -m ping
        fi
      done
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - ansible/**/*
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - ansible/**/*

# Template pour les d√©ploiements Ansible
.ansible_deploy:
  extends:
    - .ansible_base
    - .setup_ssh
  stage: deploy
  script:
    - cd ${CI_PROJECT_DIR}/ansible
    - |
      # V√©rification de l'inventaire
      inventory_file="inventory/${ENV}"
      if [ ! -f "$inventory_file" ]; then
        echo "‚ùå Inventaire $inventory_file non trouv√©"
        exit 1
      fi
      
      echo "üìã Inventaire utilis√©: $inventory_file"
      ansible-inventory -i "$inventory_file" --list
      
    - |
      # Ex√©cution du playbook principal
      if [ -f "playbooks/${PLAYBOOK:-setup.yml}" ]; then
        echo "üöÄ Ex√©cution du playbook ${PLAYBOOK:-setup.yml}..."
        ansible-playbook -i "$inventory_file" \
          "playbooks/${PLAYBOOK:-setup.yml}" \
          ${ANSIBLE_EXTRA_VARS:+-e "$ANSIBLE_EXTRA_VARS"} \
          ${DRY_RUN:+--check --diff}
      else
        echo "‚ùå Playbook ${PLAYBOOK:-setup.yml} non trouv√©"
        exit 1
      fi

# D√©ploiement Ansible Dev
ansible_deploy_dev:
  extends:
    - .ansible_deploy
    - .dev_environment
  needs:
    - job: apply_dev
      artifacts: true
  variables:
    PLAYBOOK: setup.yml
    DRY_RUN: "true"  # Mode check par d√©faut en dev

# D√©ploiement Ansible Prod
ansible_deploy_prod:
  extends:
    - .ansible_deploy
    - .prod_environment
  needs:
    - job: apply_prod
      artifacts: true
  variables:
    PLAYBOOK: setup.yml
    ANSIBLE_EXTRA_VARS: "deployment_type=production"