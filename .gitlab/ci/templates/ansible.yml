# =============================================================================
# TEMPLATES ANSIBLE - GITLAB CI/CD (VERSION REFACTORISÉE)
# =============================================================================
# Description : Templates spécialisés Ansible utilisant des scripts externes
# Version     : 2.0.0 - Scripts externalisés
# =============================================================================

# =============================================================================
# TEMPLATE DE BASE ANSIBLE
# =============================================================================

.ansible_base:
  image: cytopia/ansible:latest
  extends:
    - .base_deploy
    - .error_handling
  variables:
    ANSIBLE_FORCE_COLOR: "True"
    ANSIBLE_HOST_KEY_CHECKING: "False"
    ANSIBLE_STDOUT_CALLBACK: "yaml"
    ANSIBLE_GATHER_FACTS: "True"
  before_script: &ansible_base_before_script
    - apk add --no-cache bash
    - chmod +x .gitlab/scripts/ansible/setup-ansible.sh
    - .gitlab/scripts/ansible/setup-ansible.sh

# =============================================================================
# VALIDATION INVENTAIRE ANSIBLE
# =============================================================================

.ansible_validate_inventory:
  extends: .ansible_base
  script: &ansible_validate_inventory_script
    - chmod +x .gitlab/scripts/ansible/validate-inventory.sh
    - .gitlab/scripts/ansible/validate-inventory.sh "$ENV"

# =============================================================================
# TEST DE CONNECTIVITÉ ANSIBLE
# =============================================================================

.ansible_connectivity_test:
  extends: 
    - .ansible_base
  script: &ansible_connectivity_test_script
    - chmod +x .gitlab/scripts/ansible/test-connectivity.sh
    - .gitlab/scripts/ansible/test-connectivity.sh "$ENV"

# =============================================================================
# EXÉCUTION DE PLAYBOOKS
# =============================================================================

.ansible_run_playbook:
  extends: 
    - .ansible_base
  variables:
    PLAYBOOK_PATH: ""
    ANSIBLE_EXTRA_VARS: ""
    CHECK_MODE: "false"
  script: &ansible_run_playbook_script
    - chmod +x .gitlab/scripts/ansible/run-playbook.sh
    - .gitlab/scripts/ansible/run-playbook.sh "$ENV" "$PLAYBOOK_PATH" "$CHECK_MODE"

# =============================================================================
# TEMPLATES SPÉCIALISÉS PAR TYPE DE DÉPLOIEMENT
# =============================================================================

.ansible_deploy_scripts:
  before_script:
    - !reference [.ansible_base, before_script]
    - !reference [.ansible_validate_inventory, script]
    - !reference [.ansible_connectivity_test, script]
  script: *ansible_run_playbook_script

.ansible_deploy_dev:
  extends: 
    - .ansible_validate_inventory
    - .ansible_connectivity_test
    - .ansible_run_playbook
    - .rules_manual_dev
    - .ansible_deploy_scripts
  variables:
    ENV: dev
    CHECK_MODE: "true"  # Mode check par défaut en dev

.ansible_deploy_prod:
  extends: 
    - .ansible_run_playbook
    - .rules_manual_prod
    - .validate_branch_prod_commands
  variables:
    ENV: prod
    CHECK_MODE: "false"  # Mode réel en production
  environment:
    name: production
    action: start

# =============================================================================
# TEMPLATES DE MAINTENANCE
# =============================================================================

.ansible_maintenance:
  extends: .ansible_base
  stage: cleanup
  variables:
    MAINTENANCE_TYPE: ""
  script:
    - chmod +x .gitlab/scripts/utils/maintenance.sh
    - .gitlab/scripts/utils/maintenance.sh ansible "$MAINTENANCE_TYPE"