# =============================================================================
# VARIABLES GLOBALES ET CONFIGURATION CACHE - PIPELINE GITLAB CI/CD
# =============================================================================
# Description : Centralisation de toutes les variables du pipeline IaC
# Version     : 1.1.0 - Ajout variables pour templates DRY
# Derni√®re mise √† jour : 2025-06-10
# =============================================================================

# Configuration globale des variables
variables:
  # =============================================================================
  # CONFIGURATION TERRAFORM
  # =============================================================================
  
  # Racine des configurations Terraform
  TF_ROOT: ${CI_PROJECT_DIR}/terraform/environments
  
  # Version de Terraform √† utiliser (doit correspondre √† terraform/globals/versions.tf)
  TF_VERSION: "1.12.1"
  
  # =============================================================================
  # CONFIGURATION GIT
  # =============================================================================
  
  # Profondeur de clone Git (0 = historique complet)
  GIT_DEPTH: 0
  
  # =============================================================================
  # CONFIGURATION ANSIBLE
  # =============================================================================
  
  # D√©sactive la v√©rification des cl√©s SSH pour Ansible
  ANSIBLE_HOST_KEY_CHECKING: "False"
  
  # Force l'affichage en couleur pour Ansible
  ANSIBLE_FORCE_COLOR: "True"
  
  # Version Ansible (pour r√©f√©rence, non utilis√©e dans l'installation)
  ANSIBLE_VERSION: "2.18.6"
  
  # =============================================================================
  # CONFIGURATION DOCKER ET SECURIT√â
  # =============================================================================
  
  # R√©pertoire des certificats TLS Docker
  DOCKER_TLS_CERTDIR: "/certs"
  
  # Driver de stockage Docker optimis√©
  DOCKER_DRIVER: overlay2
  
  # =============================================================================
  # OPTIMISATION PERFORMANCE SHARED RUNNERS
  # =============================================================================
  
  # Utilisation de FastZip pour les artifacts
  FF_USE_FASTZIP: "true"
  
  # Niveau de compression des artifacts (fast/slow/fastest/slowest/default)
  ARTIFACT_COMPRESSION_LEVEL: "fast"
  
  # Niveau de compression du cache
  CACHE_COMPRESSION_LEVEL: "fast"
  
  # =============================================================================
  # TIMEOUTS ET LIMITES
  # =============================================================================
  
  # Timeout pour les requ√™tes HTTP (en secondes)
  REQUEST_TIMEOUT: 30
  
  # Nombre maximum de tentatives pour les op√©rations r√©seau
  RETRY_ATTEMPTS: 3
  
  # D√©lai entre les tentatives (en secondes)
  RETRY_DELAY: 2
  
  # =============================================================================
  # VARIABLES ENVIRONNEMENTS
  # =============================================================================
  
  # Environnements disponibles (pour validation)
  AVAILABLE_ENVIRONMENTS: "dev prod"
  
  # Branche principale pour les d√©ploiements production
  PRODUCTION_BRANCH: "main"
  
  # =============================================================================
  # üÜï VARIABLES POUR TEMPLATES DRY
  # =============================================================================
  
  # Timeouts standards par type de job (utilis√©s par .timeout_*)
  TIMEOUT_SHORT: "3m"
  TIMEOUT_MEDIUM: "5m"
  TIMEOUT_LONG: "10m"
  
  # Configuration des artifacts par d√©faut
  ARTIFACTS_EXPIRE_SHORT: "1 day"
  ARTIFACTS_EXPIRE_STANDARD: "1 week"
  ARTIFACTS_EXPIRE_LONG: "7 days"
  
  # Patterns d'exclusion pour artifacts
  ARTIFACTS_EXCLUDE_PATTERNS: "**/*.log **/node_modules/** **/.terraform/providers/** **/terraform.tfstate.backup.*"
  
  # Configuration des retry par d√©faut
  DEFAULT_RETRY_ATTEMPTS: 3
  DEFAULT_RETRY_DELAY: 2
  
  # =============================================================================
  # PATHS ET R√âPERTOIRES
  # =============================================================================
  
  # R√©pertoire des scripts CI/CD
  CI_SCRIPTS_DIR: ${CI_PROJECT_DIR}/.gitlab/scripts
  
  # R√©pertoire des modules CI
  CI_MODULES_DIR: ${CI_PROJECT_DIR}/.gitlab/ci
  
  # R√©pertoire Ansible
  ANSIBLE_DIR: ${CI_PROJECT_DIR}/ansible

# =============================================================================
# CONFIGURATION DU CACHE GLOBAL
# =============================================================================

cache:
  # Cl√© de cache dynamique incluant la branche et l'environnement
  key: "terraform-${CI_COMMIT_REF_SLUG}-${ENV:-global}"
  
  # Chemins √† mettre en cache
  paths:
    # Cache Terraform par environnement
    - ${TF_ROOT}/${ENV:-**}/.terraform
    - ${TF_ROOT}/${ENV:-**}/.terraform.lock.hcl
    
    # Cache des binaires t√©l√©charg√©s
    - /tmp/terraform-cache-${TF_VERSION}
    
  # Politique de cache : pull-push pour shared runners
  policy: pull-push
  
  # Toujours utiliser le cache, m√™me en cas d'√©chec
  when: always
  
  # D√©sactiver le d√©compression du cache non modifi√©
  untracked: false

# =============================================================================
# CONFIGURATION PAR D√âFAUT DES ARTIFACTS (REFACTORIS√âE)
# =============================================================================

default:
  artifacts:
    # Dur√©e de r√©tention par d√©faut
    expire_in: ${ARTIFACTS_EXPIRE_STANDARD}
    
    # Chemins exclus par d√©faut (convertis depuis la variable)
    exclude:
      - "**/*.log"
      - "**/node_modules/**"
      - "**/.terraform/providers/**"
      - "**/terraform.tfstate.backup.*"