# =============================================================================
# TEMPLATES TERRAFORM - GITLAB CI/CD (VERSION REFACTORISÉE)
# =============================================================================
# Description : Templates spécialisés Terraform utilisant des scripts externes
# Version     : 3.0.0 - Scripts externalisés
# =============================================================================

# =============================================================================
# INSTALLATION TERRAFORM OPTIMISÉE
# =============================================================================

.install_terraform:
  before_script:
    - chmod +x .gitlab/scripts/terraform/install-terraform.sh
    - .gitlab/scripts/terraform/install-terraform.sh "${TF_VERSION}"

# =============================================================================
# TEMPLATES DE BASE TERRAFORM
# =============================================================================

.terraform_base:
  extends: 
    - .install_terraform
    - .error_handling
  image: alpine:latest
  variables:
    TF_IN_AUTOMATION: "true"
    TF_INPUT: "false"
    TF_CLI_ARGS: "-no-color"

# =============================================================================
# TEMPLATES SPÉCIALISÉS PAR STAGE
# =============================================================================

.terraform_validate:
  extends: 
    - .terraform_base
    - .base_validate
  script:
    - chmod +x .gitlab/scripts/terraform/validate-syntax.sh
    - .gitlab/scripts/terraform/validate-syntax.sh "${ENV:-all}"

.terraform_plan:
  extends: 
    - .terraform_base
    - .base_plan
  variables:
    PLAN_FILE: "tfplan"
  script:
    - chmod +x .gitlab/scripts/terraform/plan-environment.sh
    - .gitlab/scripts/terraform/plan-environment.sh "$ENV"
  artifacts:
    paths:
      - ${TF_ROOT}/${ENV}/${PLAN_FILE}
      - ${TF_ROOT}/${ENV}/plan_status.env
      - ${TF_ROOT}/${ENV}/plan_output.txt
    reports:
      dotenv: ${TF_ROOT}/${ENV}/plan_status.env

.terraform_apply:
  extends: 
    - .terraform_base
    - .base_apply
  variables:
    PLAN_FILE: "tfplan"
  script:
    - chmod +x .gitlab/scripts/terraform/apply-environment.sh
    - .gitlab/scripts/terraform/apply-environment.sh "$ENV"
  artifacts:
    paths:
      - ${TF_ROOT}/${ENV}/terraform_outputs.json
      - ${TF_ROOT}/${ENV}/terraform.tfstate.backup.*
      - ${TF_ROOT}/${ENV}/version-constraints.json
      - ansible/inventory/${ENV}

# =============================================================================
# TEMPLATES SPÉCIALISÉS PAR ENVIRONNEMENT
# =============================================================================

.terraform_validate_dev:
  extends: 
    - .terraform_validate
    - .rules_dev
  variables:
    ENV: dev

.terraform_validate_prod:
  extends: 
    - .terraform_validate
    - .rules_prod
  variables:
    ENV: prod

.terraform_plan_dev:
  extends: 
    - .terraform_plan
    - .rules_dev
  variables:
    ENV: dev

.terraform_plan_prod:
  extends: 
    - .terraform_plan
    - .rules_prod
  variables:
    ENV: prod

.terraform_apply_dev:
  extends: 
    - .terraform_apply
    - .rules_manual_dev
  variables:
    ENV: dev

.terraform_apply_prod:
  extends: 
    - .terraform_apply
    - .rules_manual_prod
  variables:
    ENV: prod
  environment:
    name: production
    action: start

# =============================================================================
# TEMPLATES DE MAINTENANCE
# =============================================================================

.terraform_cleanup:
  extends: 
    - .terraform_base
    - .base_cleanup
  script:
    - chmod +x .gitlab/scripts/terraform/cleanup-terraform.sh
    - .gitlab/scripts/terraform/cleanup-terraform.sh