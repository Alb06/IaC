# =============================================================================
# TEMPLATES GLOBAUX RÉUTILISABLES - GITLAB CI/CD (VERSION REFACTORISÉE)
# =============================================================================
# Description : Templates transverses utilisant des scripts externes
# Version     : 2.0.0 - Scripts externalisés
# =============================================================================

# =============================================================================
# CONFIGURATION SSH RÉUTILISABLE
# =============================================================================

.setup_ssh_commands:
  script:
    - apk add --no-cache bash
    - chmod +x .gitlab/scripts/utils/ssh-setup.sh
    - .gitlab/scripts/utils/ssh-setup.sh github

# =============================================================================
# GESTION STANDARD DES ARTIFACTS
# =============================================================================

.standard_artifacts:
  artifacts:
    expire_in: 1 week
    when: always
    exclude:
      - "**/*.log"
      - "**/node_modules/**"
      - "**/.terraform/providers/**"
      - "**/terraform.tfstate.backup.*"

.artifacts_short:
  extends: .standard_artifacts
  artifacts:
    expire_in: 1 day

.artifacts_long:
  extends: .standard_artifacts
  artifacts:
    expire_in: 7 days

# =============================================================================
# RULES STANDARDISÉES PAR ENVIRONNEMENT
# =============================================================================

.rules_dev:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "main"'

.rules_prod:
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

.rules_manual_dev:
  extends: .rules_dev
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: manual
      allow_failure: false

.rules_manual_prod:
  extends: .rules_prod
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: manual
      allow_failure: false

.rules_sync:
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always

# =============================================================================
# TIMEOUTS STANDARDISÉS
# =============================================================================

.timeout_short:
  timeout: 3m

.timeout_medium:
  timeout: 5m

.timeout_long:
  timeout: 10m

# =============================================================================
# TEMPLATES DE BASE PAR STAGE
# =============================================================================

.base_validate:
  stage: validate
  extends: 
    - .timeout_short
    - .standard_artifacts

.base_plan:
  stage: plan
  extends:
    - .timeout_medium
    - .standard_artifacts

.base_apply:
  stage: apply
  extends:
    - .timeout_medium
    - .artifacts_long

.base_deploy:
  stage: deploy
  extends:
    - .timeout_medium
    - .artifacts_short

.base_sync:
  stage: sync
  extends:
    - .timeout_short

.base_cleanup:
  stage: cleanup
  extends:
    - .timeout_short

# =============================================================================
# UTILITAIRES VALIDATION
# =============================================================================

.validate_environment_commands:
  script:
    - chmod +x .gitlab/scripts/utils/environment-validation.sh
    - .gitlab/scripts/utils/environment-validation.sh "$ENV"

.validate_branch_prod_commands:
  extends: .error_handling
  script:
    - chmod +x .gitlab/scripts/utils/environment-validation.sh
    - .gitlab/scripts/utils/environment-validation.sh "$ENV" --check-branch

# =============================================================================
# GESTOIN D ERREURS
# =============================================================================

.error_handling:
  variables:
    ERROR_REPORTING: "true"
  after_script:
    - chmod +x .gitlab/scripts/utils/error-handling.sh
    - .gitlab/scripts/utils/error-handling.sh